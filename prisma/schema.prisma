// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Char(36)
  username  String   @unique
  password  String
  role      Role     @default(KASIR)
  name      String
  createdAt DateTime @default(now())
  tokoId    String?

  penjualan   Penjualan[]
  Pengeluaran Pengeluaran[]
  toko        Toko?         @relation(fields: [tokoId], references: [id])
}

enum Role {
  ADMIN
  OWNER
  KASIR
}

model Toko {
  id        String   @id @default(uuid()) @db.Char(36)
  nama      String
  createdAt DateTime @default(now())

  users  User[]
  produk Produk[]
}

model Produk {
  id        String        @id @default(uuid()) @db.Char(36)
  nama      String
  harga     Int
  stock     Int
  status    Produk_Status
  tokoId    String
  createdAt DateTime      @default(now())

  penjualan Penjualan[]
  toko      Toko        @relation(fields: [tokoId], references: [id])
}

enum Produk_Status {
  TERSEDIA
  HABIS
}

model Penjualan {
  id        String   @id @default(uuid()) @db.Char(36)
  produkId  String
  date      DateTime
  quantity  Int
  diskon    Int
  harga     Int
  total     Int
  createdBy String
  createdAt DateTime @default(now())

  produk Produk @relation(fields: [produkId], references: [id])
  user   User   @relation(fields: [createdBy], references: [id])
}

model JenisPengeluaran {
  id          String        @id @default(uuid()) @db.Char(36)
  name        String
  createdAt   DateTime      @default(now())
  pengeluaran Pengeluaran[]
}

model Pengeluaran {
  id                 String   @id @default(uuid()) @db.Char(36)
  jenisPengeluaranId String
  date               DateTime
  nominal            Int
  user               User     @relation(fields: [createdBy], references: [id])
  createdBy          String
  detailPencatatan   String   @db.LongText
  createdAt          DateTime @default(now())

  jenisPengeluaran JenisPengeluaran @relation(fields: [jenisPengeluaranId], references: [id])
}

model ArusKas {
  id                  String   @id @default(uuid()) @db.Char(36)
  date                DateTime
  saldo_awal          Int
  sum_total_penjualan Int
  sum_nilai_penjualan Int
  sum_pengeluaran     Int
  sebelum_pajak       Int
  pajak               Int
  laba_bersih         Int
  createdAt           DateTime @default(now())
}
